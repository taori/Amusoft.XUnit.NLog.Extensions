name: .NET

on:
  push:
    branches: [ master ]
    paths: 
      - .github/workflows/*
      - src/*
      - tests/*
      
  pull_request:
    branches: [ master ]
    types: 
      - opened
      - reopened
      - synchronize 
      
  workflow_dispatch:
  
    inputs:   
    
      versionSuffix:
        required: false
        description: "Version suffix for nupkg"
        
      nugetRelease:
        required: true
        description: "nuget release? (1/0)"
        default: '0'
        
      verbosity:
        required: true
        description: "verbosity of pipeline output"
        default: 'minimal'
        
      configuration:
        required: true
        description: "Configuration for builds"
        default: 'Release'

jobs:
  environment : 
    runs-on: ubuntu-latest
    
    outputs:      
      versionSuffix : ${{ steps.defaults.outputs.versionSuffix }}
      nugetRelease : ${{ steps.defaults.outputs.nugetRelease }}
      verbosity : ${{ steps.defaults.outputs.verbosity }}
      configuration : ${{ steps.defaults.outputs.configuration }}

    steps:
    
      - name: declare default values 
        id: defaults
        shell: pwsh
        env:
          isDispatch: "${{ github.event_name }}"
        run: |        
          $notManual = "$env:GITHUB_EVENT_NAME" -ne "workflow_dispatch"
          Write-Host "notManual: $notManual"
          
          $values = @(
              @("versionSuffix", $notManual, "${{ github.event.inputs.versionSuffix }}", "beta"),
              @("nugetRelease", $true, "${{ github.event.inputs.nugetRelease }}", "1"),
              @("verbosity", $true, "${{ github.event.inputs.verbosity }}", "minimal"),
              @("configuration", $true, "${{ github.event.inputs.configuration }}", "Release")
            )
            
          foreach($pair in $values){
            $value = $pair[2]
            if($pair[1] -eq $true -And [string]::IsNullOrEmpty("$value") -eq $true){
                    $value = $pair[3]
            }
            
            Write-Host "Assigning $($pair[0]) => $value"

            echo "::set-output name=$($pair[0])::$value"
          }
    
  build:
  
    if: false
    runs-on: ubuntu-latest    
    needs: environment
    
    env:      
      versionSuffix : ${{ needs.environment.outputs.versionSuffix }}
      nugetRelease : ${{ needs.environment.outputs.nugetRelease }}
      verbosity : ${{ needs.environment.outputs.verbosity }}
      configuration : ${{ needs.environment.outputs.configuration }}

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x
        
    #- name: stop
    #  run: exit 1
    - name: Restore dependencies
      run: dotnet restore src/All.sln
    - name: Build
      run: dotnet build src/All.sln --verbosity $verbosity -c $configuration --no-restore 
    - name: Test
      run: dotnet test src/All.sln --verbosity $verbosity -c $configuration --no-build 
    - name: Pack
      run: dotnet pack src/Amusoft.XUnit.NLog.Extensions/Amusoft.XUnit.NLog.Extensions.csproj --verbosity $verbosity -c $configuration -o artifacts/nupkg --no-build /p:VersionSuffix=$versionSuffix
    
    - name: Release
      run: dotnet nuget push "artifacts/nupkg/*.nupkg" -k $NUGETKEY -s https://api.nuget.org/v3/index.json
      if: ${{ needs.environment.outputs.nugetRelease == '1' }}
      env:
        NUGETKEY: ${{ secrets.NUGET }}
